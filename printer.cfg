[include shell_command.cfg]

## To use this config, during "make menuconfig" select the STM32F103
## with a "28KiB bootloader" and serial (on USART1 PA10/PA9) communication.

## Flash this firmware by copying "out/klipper.bin" to a SD card and turning on the printer with the card inserted. The firmware
## filename must end in ".bin" and must not match the last filename that was flashed.
## See docs/Config_Reference.md for a description of parameters.



[gcode_arcs]
resolution: 0.5
#   An arc will be split into segments. Each segment's length will
#   equal the resolution in mm set above. Lower values will produce a
#   finer arc, but also more work for your machine. Arcs smaller than
#   the configured value will become straight lines. The default is
#   1mm.

[printer]
kinematics: cartesian
max_velocity: 500
max_accel: 5000
max_accel_to_decel:3000
max_z_velocity: 5
max_z_accel: 50
square_corner_velocity: 5.0


[include neopixels.cfg]
[neopixel RGB]
pin: PE6
chain_count: 44
color_order: GRB
initial_RED: 0.0
initial_GREEN: 0.0
initial_BLUE: 0.0

[exclude_object]
[include timelapse.cfg]
[include webui_macros.cfg]
[include backup.cfg]
#[include pis.cfg]  ###enable pis.cfg for portable adxl####
[virtual_sdcard]
path: /home/pi/printer_data/gcodes

[mcu]
serial: /dev/serial0
baud: 250000
restart_method: command


[mcu rpi]
serial:/tmp/klipper_host_mcu


[input_shaper]
shaper_freq_x: 64.8
shaper_type_x: 2hump_ei
shaper_freq_y: 66
shaper_type_y: 2hump_ei


######Enable for regular adxl- for portable enable pis.cfg below############
#[adxl345]
#cs_pin: rpi:None

#[resonance_tester]
#accel_chip: adxl345
#probe_points:
    #100, 100, 20  # an example

[idle_timeout]
timeout: 1800
gcode:
    {% if printer.pause_resume.is_paused %}
    M118 Idle Timeout reached
    M117 Disable hotend_fan
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET=0
    STATUS_READY
    {% else %}
    SLEEP
    {% endif %}



[display_status]
[force_move]
enable_force_move: True



#####################################################################
########     X/Y Stepper   #########
#####################################################################

[stepper_x]
step_pin: PD4
dir_pin: PD3
enable_pin: !PD6
rotation_distance: 40
microsteps: 64
endstop_pin: ^PC1
position_min: -5
position_endstop: -5
position_max: 280
homing_speed: 50

[tmc2209 stepper_x]
uart_pin: PD5
interpolate: false
run_current: 0.95
hold_current: .5
stealthchop_threshold: 0


[stepper_y]
step_pin: PA15
dir_pin: !PA8
enable_pin: !PD1
rotation_distance: 40
microsteps: 64
endstop_pin: ^PC3
position_min: -5
position_endstop: -5
position_max: 260
homing_speed: 50

[tmc2209 stepper_y]
uart_pin: PD0
interpolate: false
run_current: 0.95
hold_current: .5
stealthchop_threshold: 0


#####################################################################
#######   Z Stepper  #######
#####################################################################



[stepper_z]
step_pin: PE2
dir_pin: !PE3
enable_pin: !PE0
full_steps_per_rotation: 200
rotation_distance: 8
microsteps: 64
#position_endstop: 0.0                     # disable to use BLTouch
#endstop_pin: ^PA7                         # disable to use BLTouch
endstop_pin: probe:z_virtual_endstop       # enable to use 
position_min: -5                   # enable to use BLTouch
position_max: 300
homing_speed: 4
second_homing_speed: 1
homing_retract_dist: 2.0

[tmc2209 stepper_z]
uart_pin: PE1
interpolate: false
run_current: 0.95
hold_current: .8
stealthchop_threshold: 0



#Using E1

[stepper_z1]
step_pin: PD11
dir_pin: !PD10
enable_pin: !PD13
#full_steps_per_rotation: 200
rotation_distance: 8
microsteps: 64

[tmc2209 stepper_z1]
uart_pin: PD12
interpolate: false
run_current: 0.95
hold_current: .8
stealthchop_threshold: 0




#####################################################################
########   Extruder   #######
#####################################################################


[extruder]
max_extrude_only_distance: 1000.0
step_pin: PD15
dir_pin: !PD14
enable_pin: !PC7
microsteps: 16
rotation_distance: 34.936
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PB3
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PA2
#control: pid
#pid_kp: 25.151
#pid_ki: 1.421
#pid_kd: 111.291
min_temp: 0
max_temp: 280
pressure_advance: 0.0962

## 	Thermistor Types
##   "EPCOS 100K B57560G104F"
##   "ATC Semitec 104GT-2"
##   "NTC 100K beta 3950"
##   "Honeywell 100K 135-104LAG-J01"
##   "NTC 100K MGB18-104F39050L32" (Keenovo Heater Pad)
##   "AD595"
##   "PT100 INA826"


[tmc2209 extruder]
uart_pin: PC6
interpolate: false
run_current: 0.900
hold_current: .5
stealthchop_threshold: 0
#diag_pin:

#####################################################################
#######   Bed Heater  #######
#####################################################################

[heater_bed]
heater_pin: PD7
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PA1
#control: PID
#pid_Kp: 71.797
# pid_ki = 0.940
# pid_kd = 1370.422
min_temp: 0
max_temp: 110


#####################################################################
#######  	Fan   #######
#####################################################################
#fan0 Case
[fan]
pin:PB6
#   Output pin controlling the fan. This parameter must be provided.
max_power: 1.0
#   The maximum power (expressed as a value from 0.0 to 1.0) that the
#   pin may be set to. The value 1.0 allows the pin to be set fully
#   enabled for extended periods, while a value of 0.5 would allow the
#   pin to be enabled for no more than half the time. This setting may
#   be used to limit the total power output (over extended periods) to
#   the fan. If this value is less than 1.0 then fan speed requests
#   will be scaled between zero and max_power (for example, if
#   max_power is .9 and a fan speed of 80% is requested then the fan
#   power will be set to 72%). The default is 1.0.
shutdown_speed: 0
#   The desired fan speed (expressed as a value from 0.0 to 1.0) if
#   the micro-controller software enters an error state. The default
#   is 0.
cycle_time: 0.010
#   The amount of time (in seconds) for each PWM power cycle to the
#   fan. It is recommended this be 10 milliseconds or greater when
#   using software based PWM. The default is 0.010 seconds.
#hardware_pwm: False
#   Enable this to use hardware PWM instead of software PWM. Most fans
#   do not work well with hardware PWM, so it is not recommended to
#   enable this unless there is an electrical requirement to switch at
#   very high speeds. When using hardware PWM the actual cycle time is
#   constrained by the implementation and may be significantly
#   different than the requested cycle_time. The default is False.
kick_start_time: 0.100
#   Time (in seconds) to run the fan at full speed when either first
#   enabling or increasing it by more than 50% (helps get the fan
#   spinning). The default is 0.100 seconds.
#off_below: 0.1
#   The minimum input speed which will power the fan (expressed as a
#   value from 0.0 to 1.0). When a speed lower than off_below is
#   requested the fan will instead be turned off. This setting may be
#   used to prevent fan stalls and to ensure kick starts are
#   effective. The default is 0.0.


#fan1 Parts
#[controller_fan SKR3]
#pin: PB7
#max_power:
#shutdown_speed:
#cycle_time:
#hardware_pwm:
#kick_start_time:
#off_below:
#tachometer_pin:
#tachometer_ppr:
#tachometer_poll_interval:
#enable_pin:
#   See the "fan" section for a description of the above parameters.
#fan_speed: 1.0
#   The fan speed (expressed as a value from 0.0 to 1.0) that the fan
#   will be set to when a heater or stepper driver is active.
#   The default is 1.0
#idle_timeout:30
#   The amount of time (in seconds) after a stepper driver or heater
#   was active and the fan should be kept running. The default
#   is 30 seconds.
#idle_speed:
#   The fan speed (expressed as a value from 0.0 to 1.0) that the fan
#   will be set to when a heater or stepper driver was active and
#   before the idle_timeout is reached. The default is fan_speed.
#heater:
#stepper: stepper_x, stepper_y, stepper_z, stepper_z1, extruder
#   Name of the config section defining the heater/stepper that this fan
#   is associated with. If a comma separated list of heater/stepper names
#   is provided here, then the fan will be enabled when any of the given
#   heaters/steppers are enabled. The default heater is "extruder", the
#   default stepper is all of them.
#heater:extruder,heater_bed

#[temperature_fan MCU]
#pin:PB7
#max_power:1
#shutdown_speed:1
#cycle_time:
#hardware_pwm:False
#kick_start_time:0.3
#off_below:0.1
#tachometer_pin:
#tachometer_ppr:
#tachometer_poll_interval:
#enable_pin:
#   See the "fan" section for a description of the above parameters.
#sensor_type: temperature_mcu
#sensor_pin:
#control:pid
#max_delta:
#min_temp:10
#max_temp:80
#target_temp: 40

#   See the "extruder" section for a description of the above parameters.
#pid_Kp:60
#pid_Ki:1
#pid_Kd:900
#   The proportional (pid_Kp), integral (pid_Ki), and derivative
#   (pid_Kd) settings for the PID feedback control system. Klipper
#   evaluates the PID settings with the following general formula:
#     fan_pwm = max_power - (Kp*e + Ki*integral(e) - Kd*derivative(e)) / 255
#   Where "e" is "target_temperature - measured_temperature" and
#   "fan_pwm" is the requested fan rate with 0.0 being full off and
#   1.0 being full on. The pid_Kp, pid_Ki, and pid_Kd parameters must
#   be provided when the PID control algorithm is enabled.
#pid_deriv_time: 2.0
#   A time value (in seconds) over which temperature measurements will
#   be smoothed when using the PID control algorithm. This may reduce
#   the impact of measurement noise. The default is 2 seconds.
#target_temp: 40.0
#   A temperature (in Celsius) that will be the target temperature.
#   The default is 40 degrees.
#max_speed: 1.0
#   The fan speed (expressed as a value from 0.0 to 1.0) that the fan
#   will be set to when the sensor temperature exceeds the set value.
#   The default is 1.0.
#min_speed: 0
#   The minimum fan speed (expressed as a value from 0.0 to 1.0) that
#   the fan will be set to for PID temperature fans.
#   The default is 0.3.
#gcode_id:
#   If set, the temperature will be reported in M105 queries using the
#   given id. 

[controller_fan stepper_fan]

pin: PB7
hardware_pwm:False
max_power: 1.0
shutdown_speed: 0.0
idle_timeout: 45
idle_speed: .4
kick_start_time: 0.100
stepper: stepper_x,stepper_y,stepper_z,extruder

#[temperature_fan MCU]
#pin:PB7
#fan_speed: .6
#heater:extruder,heater_bed
#sensor_type: temperature_mcu
#max_speed: 1
#min_speed: 0
#off_below:.2
#control:watermark
#control : pid
#pid_kp : 30
#pid_ki : 1
#pid_kd : 900
#pid_deriv_time:90
#cycle_time:50
#hardware_pwm: True
#min_temp:10
#max_temp:60
#max_delta:2
#target_temp: 35.0
#sensor_temperature1:28.7
#sensor_adc1: 0.446032


#fan2 Hotend
[heater_fan Hotend]
pin:PB5
#   See the "fan" section for a description of the above parameters.
heater: extruder
#   Name of the config section defining the heater that this fan is
#   associated with. If a comma separated list of heater names is
#   provided here, then the fan will be enabled when any of the given
#   heaters are enabled. The default is "extruder".
heater_temp: 50.0
#   A temperature (in Celsius) that the heater must drop below before
#   the fan is disabled. The default is 50 Celsius.
max_power: 1.0
shutdown_speed: 1.0

fan_speed: 1.0

#   The fan speed (expressed as a value from 0.0 to 1.0) that the fan
#   will be set to when its associated heater is enabled. The default
#   is 1.0
kick_start_time: 0


################################
##########  TEMPS ############
################################

[temperature_sensor RPI]
#sensor_type: rpi_temperature # alternate def
sensor_type: temperature_host
min_temp: 10
max_temp: 100


[temperature_sensor mcu_temp]
sensor_type: temperature_mcu



# Before printing the PROBE_CALIBRATE command needs to be issued
# to run the probe calibration procedure, described at
# docs/Probe_Calibrate.md, to find the correct z_offset.

#########################################################
############### Bed Mesh and Leveling ###################
#########################################################+

[z_tilt]
z_positions: 0, 130
             235, 130
#   A list of X, Y coordinates (one per line; subsequent lines
#   indented) describing the location of each bed "pivot point". The
#   "pivot point" is the point where the bed attaches to the given Z
#   stepper. It is described using nozzle coordinates (the X, Y position
#   of the nozzle if it could move directly above the point). The
#   first entry corresponds to stepper_z, the second to stepper_z1,
#   the third to stepper_z2, etc. This parameter must be provided.
points:0, 130
      235, 130
#   A list of X, Y coordinates (one per line; subsequent lines
#   indented) that should be probed during a Z_TILT_ADJUST command.
#   Specify coordinates of the nozzle and be sure the probe is above
#   the bed at the given nozzle coordinates. This parameter must be
#   provided.
speed: 200
#   The speed (in mm/s) of non-probing moves during the calibration.
#   The default is 50.
horizontal_move_z: 5
#   The height (in mm) that the head should be commanded to move to
#   just prior to starting a probe operation. The default is 5.
retries: 10
#   Number of times to retry if the probed points aren't within
#   tolerance.
retry_tolerance:.01
#   If retries are enabled then retry if largest and smallest probed
#   points differ more than retry_tolerance. Note the smallest unit of
#   change here would be a single step. However if you are probing
#   more points than steppers then you will likely have a fixed
#   minimum value for the range of probed points which you can learn
#   by observing command output.



[safe_z_home]                           # enable for BLTouch
home_xy_position: 97, 130
speed: 100
z_hop: 10
z_hop_speed: 5

[bltouch]
sensor_pin: ^PC13
control_pin: PE5
x_offset: 46
y_offset: 0
#z_offset: 1.9
speed: 3.0

[bed_mesh]                              # enable for BLTouch
speed: 100
mesh_min: 45, 25
mesh_max: 265, 240
algorithm: bicubic
probe_count: 7,7

[screws_tilt_adjust]
horizontal_move_z: 10
screw1: 5,220 #X,Y Position
screw1_name: back left
screw2: 215,220 #X,Y Position
screw2_name: back right
screw3: 5,35 #X,Y Position
screw3_name: front left
screw4: 205,35 #X,Y Position
screw4_name: front right
screw_thread: CW-M3 # Use CW for Clowise and CCW for Counter Clockwise 
speed: 50.


# Filament Switch Sensor.  Support for filament insert and runout detection
[filament_switch_sensor filament_sensor]
pause_on_runout: True
#   When set to True, a PAUSE will execute immediately after a runout
#   is detected. Note that if pause_on_runout is False and the
#   runout_gcode is omitted then runout detection is disabled. Default
#   is True.
runout_gcode: M600
#   A list of G-Code commands to execute after a filament runout is
#   detected. See docs/Command_Templates.md for G-Code format. If
#   pause_on_runout is set to True this G-Code will run after the
#   PAUSE is complete. The default is not to run any G-Code commands.
#insert_gcode:
#   A list of G-Code commands to execute after a filament insert is
#   detected. See docs/Command_Templates.md for G-Code format. The
#   default is not to run any G-Code commands, which disables insert
#   detection.
event_delay: 3.0
#   The minimum amount of time in seconds to delay between events.
#   Events triggered during this time period will be silently
#   ignored. The default is 3 seconds.
pause_delay: 0.5
#   The amount of time to delay, in seconds, between the pause command
#   dispatch and execution of the runout_gcode.  It may be useful to
#   increase this delay if Octoprint exhibits strange pause behavior.
#   Default is 0.5 seconds.
switch_pin: !PC2
#   The pin on which the switch is connected. This parameter must be
#   provided.


[firmware_retraction]
retract_length: 1
#   The length of filament (in mm) to retract when G10 is activated,
#   and to unretract when G11 is activated (but see
#   unretract_extra_length below). The default is 0 mm.
retract_speed: 40
#   The speed of retraction, in mm/s. The default is 20 mm/s.
#unretract_extra_length: 0
#   The length (in mm) of *additional* filament to add when
#   unretracting.
unretract_speed: 35
#   The speed of unretraction, in mm/s. The default is 10 mm/s.

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 71.918
#*# pid_ki = 0.944
#*# pid_kd = 1370.041
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 25.700
#*# pid_ki = 1.428
#*# pid_kd = 115.651
#*#
#*# [bltouch]
#*# z_offset = 0.500
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  -0.022500, -0.035000, -0.047500, -0.057500, -0.045000, -0.040000, -0.042500
#*# 	  -0.012500, -0.017500, -0.032500, -0.057500, -0.022500, -0.027500, -0.010000
#*# 	  -0.027500, -0.015000, -0.030000, -0.052500, -0.052500, -0.015000, -0.010000
#*# 	  0.025000, -0.002500, -0.005000, -0.035000, -0.042500, 0.012500, -0.017500
#*# 	  -0.010000, -0.017500, -0.027500, -0.055000, -0.042500, -0.007500, -0.022500
#*# 	  -0.005000, -0.032500, -0.052500, -0.062500, -0.060000, -0.022500, -0.052500
#*# 	  -0.020000, -0.020000, -0.017500, -0.027500, -0.020000, -0.022500, -0.050000
#*# tension = 0.2
#*# min_x = 45.0
#*# algo = bicubic
#*# y_count = 7
#*# mesh_y_pps = 2
#*# min_y = 25.0
#*# x_count = 7
#*# max_y = 239.97
#*# mesh_x_pps = 2
#*# max_x = 264.96000000000004
